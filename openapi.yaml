swagger: '2.0'
info:
  version: '1.0'
  title: EDU-API OpenAPI (JSON) Definition
  description: The EDU-API Education 1.0 service binding is available in REST/JSON. The model is based upon the IMS PSM modelling approach.
  termsOfService: 'Permission is granted to all parties to use excerpts from this document as needed in producing requests for proposals. The limited permissions granted above are perpetual and will not be revoked by IMS or its successors or assigns. THIS API DEFINITION IS BEING OFFERED WITHOUT ANY WARRANTY WHATSOEVER, AND IN PARTICULAR, ANY WARRANTY OF NONINFRINGEMENT IS EXPRESSLY DISCLAIMED. ANY USE OF THIS SPECIFICATION SHALL BE MADE ENTIRELY AT THE IMPLEMENTERS OWN RISK, AND NEITHER THE  CONSORTIUM, NOR ANY OF ITS MEMBERS OR SUBMITTERS, SHALL HAVE ANY LIABILITY WHATSOEVER TO ANY IMPLEMENTER OR THIRD PARTY FOR ANY DAMAGES OF ANY NATURE WHATSOEVER,  DIRECTLY OR INDIRECTLY, ARISING FROM THE USE OF THIS API DEFINITION.'
  contact:
    name: 'Lisa Mattson (COO), IMS Global '
    url: 'http://www.imsglobal.org'
    email: lmattson@imsglobal.org
  license:
    name: IMS Global
    url: 'https://www.imsglobal.org/license.html'
host: www.imsglobal.org
basePath: /ims/eduapi/v1p0
schemes:
  - http
  - https
tags:
  - name: EducationOfferingsManagement
    description: No description supplied.
  - name: EducationsManagement
    description: No description supplied.
  - name: OfferingAssociationsManagement
    description: No description supplied.
paths:
  /educationOfferings:
    get:
      operationId: getAllEducationOfferings
      summary: The REST read request message for the getAllEducationOfferings() API call.
      tags:
        - EducationOfferingsManagement
      description: ...not supplied...
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/filter'
        - $ref: '#/parameters/fields'
      responses:
        '200':
          description: The request was successfully completed and a collection has been returned. This would be accompanied by the 'codeMajor/severity' values of 'success/status' and for a REST binding a HTTP code of '200'.
          schema:
            $ref: '#/definitions/EducationOfferingSetResult'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '429':
          $ref: '#/responses/TooManyRequests'
        '500':
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Default'
    post:
      operationId: postEducationOffering
      summary: The REST create request message for the postEducationOffering() API call.
      tags:
        - EducationOfferingsManagement
      description: ...not supplied...
      parameters:
        - name: requestBody
          in: body
          description: ...tbd...
          required: true
          schema:
            $ref: '#/definitions/EducationOfferingPostBody'
      responses:
        '201':
          description: ...tbd (Response description)...
          schema:
            $ref: '#/definitions/EducationOfferingResult'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '429':
          $ref: '#/responses/TooManyRequests'
        '500':
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Default'
  /educationOfferings/{id}:
    get:
      operationId: getEducationOffering
      summary: The REST read request message for the getEducationOffering() API call.
      tags:
        - EducationOfferingsManagement
      description: ...not supplied...
      parameters:
        - $ref: '#/parameters/educationOfferingId'
        - $ref: '#/parameters/fields'
      responses:
        '200':
          description: The request was successfully completed and a record has been returned. This would be accompanied by the 'codeMajor/severity' values of 'success/status' and for a REST binding a HTTP code of '200'.
          schema:
            $ref: '#/definitions/EducationOfferingResult'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '429':
          $ref: '#/responses/TooManyRequests'
        '500':
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Default'
    patch:
      operationId: patchEducationOffering
      summary: The REST update request message for the patchEducationOffering() API call.
      tags:
        - EducationOfferingsManagement
      description: ...not supplied...
      parameters:
        - $ref: '#/parameters/educationOfferingId'
        - name: requestBody
          in: body
          description: ...tbd...
          required: true
          schema:
            $ref: '#/definitions/EducationOfferingPatchBody'
      responses:
        '200':
          description: ...tbd (Response description)...
          schema:
            $ref: '#/definitions/EducationOfferingResult'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '403':
          $ref: '#/responses/Forbidden'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '429':
          $ref: '#/responses/TooManyRequests'
        '500':
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Default'
    delete:
      operationId: deleteEducationOffering
      summary: The REST delete request message for the deleteEducationOffering() API call.
      tags:
        - EducationOfferingsManagement
      description: ...not supplied...
      parameters:
        - $ref: '#/parameters/educationOfferingId'
      responses:
        '204':
          description: ...tbd (Response description)...
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '429':
          $ref: '#/responses/TooManyRequests'
        '500':
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Default'
  /educations:
    get:
      operationId: getAllEducations
      summary: The REST read request message for the getAllEducations() API call.
      tags:
        - EducationsManagement
      description: ...not supplied...
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/filter'
        - $ref: '#/parameters/fields'
      responses:
        '200':
          description: The request was successfully completed and a collection has been returned. This would be accompanied by the 'codeMajor/severity' values of 'success/status' and for a REST binding a HTTP code of '200'.
          schema:
            $ref: '#/definitions/EducationSetResult'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '429':
          $ref: '#/responses/TooManyRequests'
        '500':
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Default'
    post:
      operationId: postEducation
      summary: The REST create request message for the postEducation() API call.
      tags:
        - EducationsManagement
      description: ...not supplied...
      parameters:
        - name: education
          in: body
          description: ...tbd...
          required: true
          schema:
            $ref: '#/definitions/EducationPostBody'
      responses:
        '201':
          description: ...tbd (Response description)...
          schema:
            $ref: '#/definitions/EducationResult'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '429':
          $ref: '#/responses/TooManyRequests'
        '500':
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Default'
  /educations/{id}:
    get:
      operationId: getEducation
      summary: The REST read request message for the getEducation() API call.
      tags:
        - EducationsManagement
      description: ...not supplied...
      parameters:
        - $ref: '#/parameters/educationId'
        - $ref: '#/parameters/fields'
      responses:
        '200':
          description: The request was successfully completed and a record has been returned. This would be accompanied by the 'codeMajor/severity' values of 'success/status' and for a REST binding a HTTP code of '200'.
          schema:
            $ref: '#/definitions/EducationResult'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '429':
          $ref: '#/responses/TooManyRequests'
        '500':
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Default'
    delete:
      operationId: deleteEducation
      summary: The REST delete request message for the deleteEducation() API call.
      tags:
        - EducationsManagement
      description: ...not supplied...
      parameters:
        - $ref: '#/parameters/educationId'
      responses:
        '204':
          description: ...tbd (Response description)...
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '429':
          $ref: '#/responses/TooManyRequests'
        '500':
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Default'
    patch:
      operationId: patchEducation
      summary: The REST create request message for the patchEducation() API call.
      tags:
        - EducationsManagement
      description: ...not supplied...
      parameters:
        - $ref: '#/parameters/educationId'
        - name: requestBody
          in: body
          description: ...tbd...
          required: true
          schema:
            $ref: '#/definitions/EducationPatchBody'
      responses:
        '200':
          description: ...tbd (Response description)...
          schema:
            $ref: '#/definitions/EducationResult'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '403':
          $ref: '#/responses/Forbidden'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '429':
          $ref: '#/responses/TooManyRequests'
        '500':
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Default'
  /offeringAssociations:
    get:
      operationId: getAllOfferingAssociations
      summary: The REST read request message for the getAllOfferingAssociations() API call.
      tags:
        - OfferingAssociationsManagement
      description: ...not supplied...
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/filter'
        - $ref: '#/parameters/fields'
      responses:
        '200':
          description: The request was successfully completed and a collection has been returned. This would be accompanied by the 'codeMajor/severity' values of 'success/status' and for a REST binding a HTTP code of '200'.
          schema:
            $ref: '#/definitions/OfferingAssociationSetDType'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '429':
          $ref: '#/responses/TooManyRequests'
        '500':
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Default'
  /offeringAssociations/{id}:
    get:
      operationId: getOfferingAssociation
      summary: The REST read request message for the getOfferingAssociation() API call.
      tags:
        - OfferingAssociationsManagement
      description: ...not supplied...
      parameters:
        - $ref: '#/parameters/offeringAssociationId'
        - $ref: '#/parameters/fields'
      responses:
        '200':
          description: The request was successfully completed and a record has been returned. This would be accompanied by the 'codeMajor/severity' values of 'success/status' and for a REST binding a HTTP code of '200'.
          schema:
            $ref: '#/definitions/SingleOfferingAssociationDType'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '429':
          $ref: '#/responses/TooManyRequests'
        '500':
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Default'
    delete:
      operationId: deleteOfferingAssociation
      summary: The REST delete request message for the deleteOfferingAssociation() API call.
      tags:
        - OfferingAssociationsManagement
      description: ...not supplied...
      parameters:
        - $ref: '#/parameters/offeringAssociationId'
      responses:
        '204':
          description: ...tbd (Response description)...
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '429':
          $ref: '#/responses/TooManyRequests'
        '500':
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Default'
    put:
      operationId: putOfferingAssociation
      summary: The REST create request message for the putOfferingAssociation() API call.
      tags:
        - OfferingAssociationsManagement
      description: ...not supplied...
      parameters:
        - $ref: '#/parameters/offeringAssociationId'
      responses:
        '201':
          description: ...tbd (Response description)...
          schema:
            $ref: '#/definitions/imsx_StatusInfoDType'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '429':
          $ref: '#/responses/TooManyRequests'
        '500':
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Default'
parameters:
  limit:
    name: page[limit]
    in: query
    description: To define the download segmentation value i.e. the maximum number of records to be contained in the response.
    required: false
    type: integer
    format: int32
    default: 100
    minimum: 1
    allowEmptyValue: false
  offset:
    name: page[offset]
    in: query
    description: The number of the first record to be supplied in the segmented response message.
    required: false
    type: integer
    format: int32
    default: 0
    minimum: 0
    allowEmptyValue: false
  sort:
    name: sort
    in: query
    description: 'Identifies the sort criteria to be used for the records in the response message. Order is ascending unless prefixed with a ''-'''
    required: false
    type: string
    allowEmptyValue: false
  filter:
    name: filter
    in: query
    description: 'The filtering rules to be applied when identifying the records to be supplied in the response message. The sort order should follow the [UNICODE, 16] standard.'
    required: false
    type: string
    allowEmptyValue: false
  fields:
    name: fields
    in: query
    description: To identify the range of fields that should be supplied in the response message.
    required: false
    type: array
    items:
      type: string
    collectionFormat: csv
    allowEmptyValue: false
  educationOfferingId:
    name: id
    in: path
    description: ...tbd...
    required: true
    type: string
  educationId:
    name: id
    in: path
    description: ...tbd...
    required: true
    type: string
  offeringAssociationId:
    name: id
    in: path
    description: ...tbd...
    required: true
    type: string
responses:
  InternalServerError:
    description: 'This code should be used only if there is catastrophic error and there is not a more appropriate code i.e. ''internal_server_error''. This would be accompanied by the ''codeMajor/severity'' values of ''failure/error''. '
    schema:
      $ref: '#/definitions/imsx_StatusInfoDType'
  BadRequest:
    description: 'Either an invalid selection field or invalid filter selection was supplied and data filtering on the selection criteria was not possible i.e. ''invalid_selection_field'' or  ''invalid_filter_field'' respectively. This is accompanied by the ''codeMajor/severity'' values of ''failure/error''. '
    schema:
      $ref: '#/definitions/imsx_StatusInfoDType'
  UnprocessableEntity:
    description: 'This error condition may occur if a JSON request body contains well-formed (i.e. syntactically correct), but semantically erroneous, JSON instructions. This would be accompanied by the ''codeMajor/severity'' values of ''failure/error''. '
    schema:
      $ref: '#/definitions/imsx_StatusInfoDType'
  TooManyRequests:
    description: 'The server is receiving too many requests i.e. ''server_busy''. Retry at a later time. This would be accompanied by the ''codeMajor/severity'' values of ''failure/error''. '
    schema:
      $ref: '#/definitions/imsx_StatusInfoDType'
  Unauthorized:
    description: 'The request was not correctly authorised i.e. ''unauthorisedrequest''. This would be accompanied by the ''codeMajor/severity'' values of ''failure/error''. '
    schema:
      $ref: '#/definitions/imsx_StatusInfoDType'
  Forbidden:
    description: 'This is used to indicate that the server can be reached and process the request but refuses to take any further action i.e. ''forbidden''. This would be accompanied by the ''codeMajor/severity'' values of ''failure/error''. '
    schema:
      $ref: '#/definitions/imsx_StatusInfoDType'
  NotFound:
    description: 'Either the supplied identifier is unknown in the Service Provider and so the object could not be changed or an invalid GUID has been supplied. This would be accompanied by the ''codeMajor/severity'' values of ''failure/error''. The statement ''Unknown Object'' should also be presented. '
    schema:
      $ref: '#/definitions/imsx_StatusInfoDType'
  Default:
    description: 'This is the default error response when no other appropriate code is available.  This would be accompanied by the ''codeMajor/severity'' values of ''failure/error''. '
    schema:
      $ref: '#/definitions/imsx_StatusInfoDType'
definitions:
  EducationResource:
    description: ...tbd (Class description)...
    type: object
    required:
      - type
      - id
      - attributes
    properties:
      # new field
      type: &EducationType
        type: string
        enum: [education]
      # sourcedId -> id
      id: &EducationId
        type: string
        description: Model Primitive Datatype = String. ...tbd (DerivedType property description)...
      # all other fields besides sourcedId moved to attributes object
      attributes:
        type: object
        # Made all fields required. This prevents clients from having to strictly check that all
        # fields exist before accessing them.
        required:
          - status
          - dateLastModified
          - metadata
          - title
          - code
          - organization
          - level
          - meetings
          - creditType
          - description
          - courseType
          - educationType
          - gradingScheme
        additionalProperties: false
        properties: &EducationAttributesProperties
          status:
            description: ...tbd (Enumeration description)...
            type: string
            enum:
              - active
              - tobedeleted
          dateLastModified:
            description: Model Primitive Datatype = DateTime. ...tbd (PrimitiveType description)...
            type: string
            format: date-time
          metadata:
            $ref: '#/definitions/MetadataDType'
          title:
            description: Model Primitive Datatype = NormalizedString. ...tbd (PrimitiveType description)...
            type: string
          code:
            description: Model Primitive Datatype = NormalizedString. ...tbd (PrimitiveType description)...
            type: string
          organization:
            $ref: '#/definitions/GUIDRefDType'
          level:
            description: ...tbd (Enumeration description)...
            type: string
            enum:
              - graduate
              - undergraduate
          meetings:
            description: ...tbd (ComplexType property description)...
            type: array
            minItems: 0
            items:
              $ref: '#/definitions/MeetingsDType'
          creditType:
            description: ...tbd (Enumeration description)...
            type: string
            enum:
              - credit
              - non-credit
              - ects
          description:
            description: Model Primitive Datatype = String. ...tbd (PrimitiveType description)...
            type: string
          courseType:
            description: Model Primitive Datatype = NormalizedString. ...tbd (PrimitiveType description)...
            type: string
          educationType:
            description: Model Primitive Datatype = NormalizedString. ...tbd (PrimitiveType description)...
            type: string
          gradingScheme:
            description: Model Primitive Datatype = NormalizedString. ...tbd (PrimitiveType description)...
            type: string
  EducationResult:
    type: object
    required:
      - data
    additionalProperties: false
    properties:
      data:
        $ref: '#/definitions/EducationResource'
  EducationSetResult:
    type: object
    required:
      - data
    additionalProperties: false
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/EducationResource'
  EducationPostBody:
    type: object
    required:
      - data
    additionalProperties: false
    properties:
      data:
        type: object
        required:
          - type
          - attributes
        properties:
          type: *EducationType
          attributes:
            type: object
            # required fields taken from original required fields
            required:
              - sourcedId
              - status
              - dateLastModified
              - title
              - code
              - organization
              - educationType
            properties: *EducationAttributesProperties
  EducationPatchBody:
    type: object
    required:
      - data
    additionalProperties: false
    properties:
      data:
        type: object
        required:
          - type
          - id
          - attributes
        properties:
          type: *EducationType
          id: *EducationId
          attributes:
            type: object
            properties: *EducationAttributesProperties
  EducationOfferingResource:
    description: ...tbd (Class description)...
    type: object
    required:
      - type
      - id
      - attributes
    properties:
      # new field
      type: &EducationOfferingType
        type: string
        enum: [educationOffering]
      # sourcedId -> id
      id: &EducationOfferingId
        type: string
        description: Model Primitive Datatype = String. ...tbd (DerivedType property description)...
      # all other fields besides sourcedId moved to attributes object
      attributes:
        type: object
        # Made all fields required. This prevents clients from having to strictly check that all
        # fields exist before accessing them.
        required:
          - status
          - dateLastModified
          - metadata
          - title
          - offeringCode
          - location
          - org
          - academicSession
          - education
          - registrationStatus
          - startDate
          - endDate
          - offeringFormat
        additionalProperties: false
        properties: &EducationOfferingAttributesProperties
          status:
            description: ...tbd (Enumeration description)...
            type: string
            enum:
              - active
              - tobedeleted
          dateLastModified:
            description: Model Primitive Datatype = DateTime. ...tbd (PrimitiveType description)...
            type: string
            format: date-time
          metadata:
            $ref: '#/definitions/MetadataDType'
          title:
            description: Model Primitive Datatype = NormalizedString. ...tbd (PrimitiveType description)...
            type: string
          offeringCode:
            description: Model Primitive Datatype = NormalizedString. ...tbd (PrimitiveType description)...
            type: string
          location:
            description: ...tbd (ComplexType property description)...
            type: array
            minItems: 0
            items:
              $ref: '#/definitions/GUIDRefDType'
          org:
            $ref: '#/definitions/GUIDRefDType'
          academicSession:
            $ref: '#/definitions/GUIDRefDType'
          education:
            $ref: '#/definitions/GUIDRefDType'
          registrationStatus:
            description: ...tbd (Enumeration description)...
            type: string
            enum:
              - open
              - closed
              - pending
              - waitlist
          startDate:
            description: Model Primitive Datatype = DateTime. ...tbd (PrimitiveType description)...
            type: string
            format: date-time
          endDate:
            description: Model Primitive Datatype = DateTime. ...tbd (PrimitiveType description)...
            type: string
            format: date-time
          offeringFormat:
            description: ...tbd (Enumeration description)...
            type: string
            enum:
              - online
              - blended
              - onground
  EducationOfferingResult:
    type: object
    required:
      - data
    additionalProperties: false
    properties:
      data:
        $ref: '#/definitions/EducationOfferingResource'
  EducationOfferingSetResult:
    type: object
    required:
      - data
    additionalProperties: false
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/EducationOfferingResource'
  EducationOfferingPostBody:
    type: object
    required:
      - data
    additionalProperties: false
    properties:
      data:
        type: object
        required:
          - type
          - attributes
        properties:
          type: *EducationOfferingType
          attributes:
            type: object
            # required fields taken from original required fields
            required:
              - sourcedId
              - status
              - dateLastModified
              - title
              - offeringCode
              - org
              - academicSession
              - education
              - registrationStatus
              - offeringFormat
            properties: *EducationOfferingAttributesProperties
  EducationOfferingPatchBody:
    type: object
    required:
      - data
    additionalProperties: false
    properties:
      data:
        type: object
        required:
          - type
          - id
          - attributes
        properties:
          type: *EducationOfferingType
          id: *EducationOfferingId
          attributes:
            type: object
            properties: *EducationOfferingAttributesProperties
  GUIDRefDType:
    description: ...tbd (Class description)...
    type: object
    properties:
      href:
        description: Model Primitive Datatype = AnyURI. ...tbd (PrimitiveType description)...
        type: string
        format: uri
      sourcedId:
        description: Model Primitive Datatype = String. ...tbd (DerivedType property description)...
        type: string
      type:
        description: ...tbd (Enumeration description)...
        type: string
        enum:
          - academicSession
          - education
          - educationOffering
          - location
          - organization
          - person
    required:
      - href
      - sourcedId
      - type
    additionalProperties: false
  MeetingsDType:
    description: ...tbd (Class description)...
    type: object
    properties:
      format:
        description: Model Primitive Datatype = NormalizedString. ...tbd (PrimitiveType description)...
        type: string
      startDate:
        description: Model Primitive Datatype = DateTime. ...tbd (PrimitiveType description)...
        type: string
        format: date-time
      endDate:
        description: Model Primitive Datatype = DateTime. ...tbd (PrimitiveType description)...
        type: string
        format: date-time
    required:
      - format
      - startDate
      - endDate
    additionalProperties: false
  MetadataDType:
    description: ...tbd (Class description)...
    type: object
    properties: {}
    additionalProperties: true
  OfferingAssociationDType:
    description: ...tbd (Class description)...
    type: object
    properties:
      sourcedId:
        description: Model Primitive Datatype = String. ...tbd (DerivedType property description)...
        type: string
      status:
        description: ...tbd (Enumeration description)...
        type: string
        enum:
          - active
          - tobedeleted
      dateLastModified:
        description: Model Primitive Datatype = DateTime. ...tbd (PrimitiveType description)...
        type: string
        format: date-time
      metadata:
        $ref: '#/definitions/MetadataDType'
      personId:
        $ref: '#/definitions/GUIDRefDType'
      educationOfferingId:
        $ref: '#/definitions/GUIDRefDType'
      role:
        description: ...tbd (Enumeration description)...
        type: string
        enum:
          - administrator
          - aide
          - guardian
          - parent
          - proctor
          - relative
          - student
          - teacher
      beginDate:
        description: Model Primitive Datatype = DateTime. ...tbd (PrimitiveType description)...
        type: string
        format: date-time
      endDate:
        description: Model Primitive Datatype = DateTime. ...tbd (PrimitiveType description)...
        type: string
        format: date-time
      associationType:
        description: ...tbd (Enumeration description)...
        type: string
        enum:
          - enrollment
          - assigned
    required:
      - sourcedId
      - status
      - dateLastModified
      - personId
      - educationOfferingId
      - role
    additionalProperties: false
  OfferingAssociationSetDType:
    description: ...tbd (Class description)...
    type: object
    properties:
      offeringAssociationSet:
        description: ...tbd (ComplexType property description)...
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/OfferingAssociationDType'
    additionalProperties: false
  SingleOfferingAssociationDType:
    description: ...tbd (Class description)...
    type: object
    properties:
      offeringAssociation:
        $ref: '#/definitions/OfferingAssociationDType'
    required:
      - offeringAssociation
    additionalProperties: false
  imsx_CodeMinorDType:
    description: This is the container for the set of code minor status codes reported in the responses from the Service Provider.
    type: object
    properties:
      imsx_codeMinorField:
        description: Each reported code minor status code.
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/imsx_CodeMinorFieldDType'
    required:
      - imsx_codeMinorField
    additionalProperties: false
  imsx_CodeMinorFieldDType:
    description: This is the container for a single code minor status code.
    type: object
    properties:
      imsx_codeMinorFieldName:
        description: Model Primitive Datatype = NormalizedString. This should contain the identity of the system that has produced the code minor status code report. In most cases this will be the target service provider denoted as 'TargetEndSystem'.
        type: string
        default: TargetEndSystem
      imsx_codeMinorFieldValue:
        description: The code minor status code (this is a value from the corresponding enumerated vocabulary).
        type: string
        enum:
          - fullsuccess
          - invalid_filter_field
          - invalid_selection_field
          - invaliddata
          - unauthorisedrequest
          - forbidden
          - server_busy
          - unknownobject
          - internal_server_error
    required:
      - imsx_codeMinorFieldName
      - imsx_codeMinorFieldValue
    additionalProperties: false
  imsx_StatusInfoDType:
    description: This is the container for the status code and associated information returned within the HTTP messages received from the Service Provider. For the OneRoster Rostering service this object will only be returned to provide information about a failed request i.e. it will NOT be in the payload for a successful request. See Appendix B for further information on the interpretation of the information contained within this class.
    type: object
    properties:
      imsx_codeMajor:
        description: The code major value (from the corresponding enumerated vocabulary). See Appendix B for further information on the interpretation of this set of codes. The permitted vocabulary for the values for the CodeMajor field.
        type: string
        enum:
          - success
          - processing
          - failure
          - unsupported
      imsx_severity:
        description: The severity value (from the corresponding enumerated vocabulary). See Appendix B for further information on the interpretation of this set of codes.
        type: string
        enum:
          - status
          - warning
          - error
      imsx_description:
        description: Model Primitive Datatype = String. A human readable description supplied by the entity creating the status code information.
        type: string
      imsx_CodeMinor:
        $ref: '#/definitions/imsx_CodeMinorDType'
    required:
      - imsx_codeMajor
      - imsx_severity
    additionalProperties: false
consumes:
  - application/json
produces:
  - application/json
